#!/usr/bin/env zsh
export PLUGIN_ID=$1; shift
export PLUGIN_OWNER=${PLUGIN_ID:h}
export PLUGIN_NAME=${PLUGIN_ID:t}
export PLUGIN_HOME=${ZUTILS[PLUGINS_PATH]}/${PLUGIN_OWNER}--${PLUGIN_NAME}

# has zu mirrored plugin locally?
if [[ ! -d "${PLUGIN_HOME}" ]]; then
	echo -n "Adding ${fg_bold[blue]}${PLUGIN_ID}${reset_color}		"
	for mirror_plugin_fn in ${(Mk)functions:#.zu-mod--mirror--*}; do; ${mirror_plugin_fn}; done &> /dev/null
	.zu-mod--zcompile

	echo "\rAdded ${fg_bold[blue]}${PLUGIN_ID}${reset_color} ${fg_bold[cyan]}âœ”${reset_color}		"
fi

local file=""
local when=""

while [[ -n "$@" ]]; do
    case $1 in
		(when*) when=${1//when/};;
        (pick*) file=${1//pick};;
    esac
    shift
done

local files=(
	${file:+${PLUGIN_HOME}/${file}}
	${PLUGIN_HOME}/*.plugin.zsh(N)
	${ZUTILS[HOME_PATH]}/core/.zu-plugin-null
)

local name=".zu-task-anon-${RANDOM//2/E}${RANDOM}${RANDOM/6//v}${RANDOM//0//OO}"

case ${when} in
	(\[\[*\]\])
		eval "${name}() {
			$when || return 0;
			source ${files};
			zsh_loaded_plugins+=(${PLUGIN_ID});
			add-zle-hook-widget -d line-pre-redraw ${name};
			unset -f ${name};
		}"

		add-zle-hook-widget line-pre-redraw ${name}
	;;
	(idle)
		eval "${name}() {
			source ${files};
			zsh_loaded_plugins+=(${PLUGIN_ID});
			add-zle-hook-widget -d line-init ${name};
			unset -f ${name};
		}"

		add-zle-hook-widget line-init ${name}
	;;
	*)
		source ${files}
	;;
esac

# add-zle-hook-widget line-init "eccho test"

# set +x
unset PLUGIN_ID PLUGIN_OWNER PLUGIN_NAME PLUGIN_HOME
